// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  engineType    = "library"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



// ENUMS: To define a set of allowed values for a field
enum Role {
  STUDENT
  BUYER
  ADMIN
}

enum Status {
  DRAFT
  IN_AUCTION
  SOLD
  ENDED
}

// MODELS: Represent the tables in your database

model User {
  id              String    @id @default(cuid())
  email           String    @unique
  name            String
  password        String
  role            Role      @default(STUDENT)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  artworks        Artwork[] // A user can have many artworks
  bids            Bid[]     // A user can place many bids
  winningAuctions Auction[] // A user can win many auctions
}

model Artwork {
  id          String  @id @default(cuid())
  title       String
  description String
  imageUrl    String
  studentId   String
  status      Status  @default(DRAFT)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  student User     @relation(fields: [studentId], references: [id])
  auction Auction? // An artwork can have one auction
}

model Auction {
  id              String   @id @default(cuid())
  artworkId       String   @unique // Each artwork can only be in one auction
  startTime       DateTime
  endTime         DateTime
  startPrice      Float
  currentPrice    Float
  highestBidderId String?

  artwork         Artwork  @relation(fields: [artworkId], references: [id])
  highestBidder   User?    @relation(fields: [highestBidderId], references: [id])
  bids            Bid[]    // An auction can have many bids
}

model Bid {
  id        String   @id @default(cuid())
  auctionId String
  bidderId  String
  amount    Float
  createdAt DateTime @default(now())

  auction Auction @relation(fields: [auctionId], references: [id])
  bidder  User    @relation(fields: [bidderId], references: [id])
}