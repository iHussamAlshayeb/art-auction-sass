generator client {
  provider   = "prisma-client-js"
  engineType = "library"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  STUDENT
  ADMIN
}

enum Status {
  DRAFT
  IN_AUCTION
  SOLD
  ENDED
}

model User {
  id              String    @id @default(cuid())
  email           String    @unique
  name            String
  password        String
  role            Role      @default(STUDENT)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  profileImageUrl String?
  schoolName      String?
  gradeLevel      String?
  bio             String?   @db.Text // @db.Text
  artworks        Artwork[]
  bids            Bid[]
  winningAuctions Auction[] @relation("WinningBids")
  payments        Payment[]
}

model Artwork {
  id          String   @id @default(cuid())
  title       String
  description String
  imageUrl    String
  studentId   String
  status      Status   @default(DRAFT)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  student     User     @relation(fields: [studentId], references: [id], onDelete: Cascade)
  auction     Auction?
}

model Auction {
  id              String   @id @default(cuid())
  artworkId       String   @unique
  startTime       DateTime
  endTime         DateTime
  startPrice      Float
  currentPrice    Float
  highestBidderId String?  
  artwork         Artwork  @relation(fields: [artworkId], references: [id], onDelete: Cascade)
  highestBidder   User?    @relation("WinningBids", fields: [highestBidderId], references: [id], onDelete: SetNull)
  bids            Bid[]
  

  payment         Payment?
}

model Bid {
  id        String   @id @default(cuid())
  auctionId String
  bidderId  String
  amount    Float
  createdAt DateTime @default(now())
  auction   Auction  @relation(fields: [auctionId], references: [id], onDelete: Cascade)
  bidder    User     @relation(fields: [bidderId], references: [id], onDelete: Cascade)
}

// ## الجزء المفقود الثاني: موديل الدفعات بالكامل ##
model Payment {
  id             String   @id @default(cuid())
  amount         Float
  currency       String
  status         String
  gatewayPaymentId String   @unique
  auctionId      String   @unique
  userId         String
  createdAt      DateTime @default(now())
  auction        Auction  @relation(fields: [auctionId], references: [id], onDelete: Cascade)
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}